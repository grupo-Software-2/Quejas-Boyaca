name: Release

on:
  push:
    branches:
      - 'main'

permissions:
  contents: write
  actions: read

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Git
        run: |
          git fetch --tags
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Get latest tag
        id: get_latest_tag
        run: |
          tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "latest_tag=$tag" >> $GITHUB_ENV
          echo "Latest tag: $tag"

      - name: Determine version bump type
        id: bump_type
        run: |
          commits=$(git log ${{ env.latest_tag }}..HEAD --pretty=format:"%s%n%b")
          echo "Commits since last tag:"
          echo "$commits"

          if echo "$commits" | grep -qiE "^feat\("; then
            bump="proud"
          elif echo "$commits" | grep -qiE "^(refactor|ci)\("; then
            bump="default"
          elif echo "$commits" | grep -qiE "^(fix|hotfix|test|chore|docs|style|build)\("; then
            bump="shame"
          else
            bump="shame"
          fi

          echo "Detected bump type: $bump"
          echo "bump_type=$bump" >> $GITHUB_ENV

      - name: Generate changelog
        id: changelog
        run: |
          echo "## Changelog" > changelog.txt
          echo "" >> changelog.txt
          git log ${{ env.latest_tag }}..HEAD --pretty=format:"- %s (%an)" >> changelog.txt
          echo "" >> changelog.txt
          cat changelog.txt

      - name: Bump version automatically
        id: version
        run: |
          latest="${{ env.latest_tag }}"
          bump="${{ env.bump_type }}"
          echo "Latest tag: $latest"
          echo "Bump type: $bump"

          version=$(echo $latest | sed 's/v//')
          IFS='.' read -r major minor patch <<< "$version"

          case "$bump" in
            proud)
              major=$((major + 1))
              minor=0
              patch=0
              ;;
            default)
              minor=$((minor + 1))
              patch=0
              ;;
            shame)
              patch=$((patch + 1))
              ;;
          esac

          new_version="v$major.$minor.$patch"
          echo "new_version=$new_version" >> $GITHUB_ENV
          echo "New version: $new_version"

      - name: Create new tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git tag ${{ env.new_version }}
          git push origin ${{ env.new_version }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: ${{ env.new_version }}
          name: "Release ${{ env.new_version }}"
          body_path: changelog.txt
          draft: false
          prerelease: false
